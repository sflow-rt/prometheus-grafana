networks:

  monitoring:
    driver: bridge

services:

  sflow-rt:
    image: sflow/${RT_IMAGE:-prometheus}
    container_name: sflow-rt
    user: ${DOCKER_USER}
    restart: unless-stopped
    environment:
      - RTMEM=${RTMEM:-1G}
      - RTPROP=${RTPROP:-}
    volumes:
      - ./sflow-rt/store:/sflow-rt/store
    ports:
      - '6343:6343/udp'
      - '8008:8008'
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    user: ${DOCKER_USER}
    restart: unless-stopped
    depends_on:
      - sflow-rt
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/var:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=${PROM_RETENTION:-30d}
    ports:
      - '9090:9090'
    networks:
      - monitoring

  renderer:
    image: grafana/grafana-image-renderer
    container_name: renderer
    restart: unless-stopped
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    user: ${DOCKER_USER} 
    restart: unless-stopped
    environment:
      - GF_INSTALL_PLUGINS=knightss27-weathermap-panel,esnet-matrix-panel
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
    depends_on:
      - sflow-rt
      - prometheus
      - renderer
    volumes:
      - ./grafana/prometheus.yml:/etc/grafana/provisioning/datasources/prometheus.yml
      - ./grafana/var:/var/lib/grafana
    ports:
      - '3000:3000'
    networks:
      - monitoring

